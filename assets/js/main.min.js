$(document).ready(function () {
  //show detail

  //loading Fake

  setTimeout(() => {
    document.querySelector(".my_container").classList.add("is-loading-done");
  }, 1000);

  btnShowDetail = document.querySelectorAll(".btn-detail");
  btnShowDetail.forEach((element) => {
    element.addEventListener("click", () => {
      detailNumber = element.getAttribute("detail");
      document.querySelector(".detail-show").classList.remove("detail-show");
      detailElement = document.querySelector(`.detail-${detailNumber}`);
      detailElement.classList.add("detail-show");
      $("#exampleModal").modal("show");

      elementHasRefrestAos = detailElement.querySelectorAll(".aos-animate");
      elementHasRefrestAos.forEach((aos) => {
        aos.classList.remove("aos-animate");
      });

      setTimeout(() => {
        AOS.init();
        AOS.refreshHard();
      }, 300);
    });
  });

  itemStacks = [];

  initMyStack = () => {
    console.log("run");
    myStack = document.querySelector(".my-stack");
    itemStacks = myStack.querySelectorAll(".stack-item");
    console.log(itemStacks);
    addZindex(itemStacks);
    addActionButton(itemStacks);
  };

  addActionButton = (itemStacks) => {
    itemStacks.forEach((item, i) => {
      btn = item.querySelector(".active-button");
      btn.addEventListener("click", changePage);
    });
  };

  changePage = (event, index) => {
    activeItem = event.target.closest(".stack-item");
    document.querySelector(".activeStack").classList.remove("activeStack");
    activeItem.classList.add("activeStack");
    arrayFromNodeList = Array.from(itemStacks);
    indexOfItemActive = arrayFromNodeList.indexOf(activeItem);
    console.log(indexOfItemActive);
    scroll(indexOfItemActive);
    resetAos();
  };

  resetAos = () => {
    console.log("reset AOS");
    elementHasRefrestAos = document.querySelectorAll(".aos-animate");
    elementHasRefrestAos.forEach((aos) => {
      aos.classList.remove("aos-animate");
    });

    setTimeout(() => {
      AOS.init();
      AOS.refreshHard();
    }, 900);
  };
  scroll = (indexOfItemActive) => {
    itemStacks.forEach((item, i) => {
      if (i < indexOfItemActive) {
        //to left

        setTimeout(() => {
          item.classList.add("toLeft");
        }, 100);
      } else {
        setTimeout(() => {
          item.classList.remove("toLeft");
        }, 100);
      }
    });
  };

  addZindex = (itemStacks) => {
    itemStacks.forEach((item, i) => {
      item.style.zIndex = `${itemStacks.length - i}`;
    });
  };

  initMyStack();

  ///swwiper slide

  // ------------ TAB 2 ---

  var swiper2 = new Swiper(".slide-stack-2", {
    grabCursor: true,
    centeredSlides: true,
    loop: true,
    slidesPerView: "auto",
    slidesToShow: 3,
    // slidesPerView: default,
    coverflowEffect: {},
    effect: "coverflow",
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
    },
    navigation: {
      nextEl: ".st-2 .swiper-button-next",
      prevEl: ".st-2 .swiper-button-prev",
    },
    breakpoints: {
      1441: {
        coverflowEffect: {
          rotate: 0,
          stretch: 530,
          depth: 350,
          modifier: 1,
          slideShadows: true,
        },
      },
      1024: {
        coverflowEffect: {
          rotate: 0,
          stretch: 530,
          stretch: 350,
          depth: 300,
          slideShadows: true,
        },
      },
      300: {
        effect: "",
        coverflowEffect: {},
        loop: false,
        slidesToShow: 3,
      },
    },
    // effect: "fade",
  });

  // ------------ TAB 2 EXTRA ---

  var swiper2Extra = new Swiper(".slide-stack-2-extra", {
    grabCursor: true,
    centeredSlides: true,
    loop: true,
    slidesPerView: "auto",
    slidesToShow: 3,
    // slidesPerView: default,
    coverflowEffect: {},
    effect: "coverflow",
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
    },
    navigation: {
      nextEl: ".stack-home .extra-ver-2 .swiper-button-next",
      prevEl: ".stack-home .extra-ver-2 .swiper-button-prev",
    },
    breakpoints: {
      300: {
        effect: "",
        coverflowEffect: {},
        loop: false,
        slidesToShow: 1,
      },
    },
    // effect: "fade",
  });

  // ------------ TAB 3 ---

  var swiper3 = new Swiper(".slide-stack-3", {
    navigation: {
      nextEl: ".slide-stack-3 .swiper-button-next",
      prevEl: ".slide-stack-3 .swiper-button-prev",
    },
    // effect: "fade",
  });

  // ------------ TAB 4 ---

  var swiper4 = new Swiper(".slide-stack-4", {
    navigation: {
      nextEl: ".slide-stack-4 .swiper-button-next",
      prevEl: ".slide-stack-4 .swiper-button-prev",
    },
    // effect: "fade",
  });

  // ------------ TAB 5 ---

  var swiper5 = new Swiper(".slide-stack-5", {
    navigation: {
      nextEl: ".slide-stack-5 .swiper-button-next",
      prevEl: ".slide-stack-5 .swiper-button-prev",
    },
    // effect: "fade",
  });

  //lăn chuột

  isScroll = false;

  if (window.innerWidth > 1025) {
    window.addEventListener(
      "wheel",
      function (event) {
        // Khi sự kiện wheel (lăn chuột) xảy ra
        if (!isScroll) {
          event.preventDefault();

          if (event.deltaY > 0) {
            // if ($("#exampleModal").is(":visible")) {
            //   console.log("Modal is open");
            // } else {
            //   trickgerScroll("down");
            // }

            console.log("Lăn chuột xuống");
            trickgerScroll("down");
          } else if (event.deltaY < 0) {
            console.log("Lăn chuột lên");

            trickgerScroll("up");

            // if ($("#exampleModal").is(":visible")) {
            //   console.log("Modal is open");
            // } else {
            //   trickgerScroll("up");
            // }
          }
        }
      },
      { passive: false }
    );
  }

  trickgerScroll = (direc) => {
    var isOpen = $("#exampleModal").hasClass("show");

    isScroll = true;
    currentActiveStack = document.querySelector(".activeStack");
    arrayFromNodeList = Array.from(itemStacks);
    currentActiveStackIndex = arrayFromNodeList.indexOf(currentActiveStack);

    if (direc == "down") {
      if (currentActiveStackIndex != arrayFromNodeList.length - 1) {
        targetStack = arrayFromNodeList[currentActiveStackIndex + 1];
        if (!isOpen) {
          targetStack.querySelector(".active-button").click();
        }
      }
    } else {
      if (currentActiveStackIndex > 0) {
        targetStack = arrayFromNodeList[currentActiveStackIndex - 1];
        if (!isOpen) {
          targetStack.querySelector(".active-button").click();
        }
      }
    }
    setTimeout(() => {
      isScroll = false;
    }, 500);
  };

  /// Scroll inside
  if (window.innerWidth > 1024) {
    (function ($) {
      $(window).on("load", function () {
        $(".content").mCustomScrollbar();
      });
    })(jQuery);
  } else {
    document.querySelector(".mCustomScrollbar").classList.remove("mCustomScrollbar");
  }

  // show all

  btnClickShowFull = document.querySelector(".click-container");
  btnClickShowFull.addEventListener("click", () => {
    document.querySelector(".my_container").classList.add("show-full");
    var element = document.querySelector(".st-2");
    // Scroll to the element
    element.scrollIntoView({ behavior: "smooth" });

    swiper2.update();
    swiper3.update();
    swiper4.update();
    swiper5.update();
    swiper2Extra.update();
  });

  // Lấy danh sách các div
  var divs = document.querySelectorAll(".stack-item");

  // Lấy danh sách các div
  var divs = document.querySelectorAll(".my-div");

  // Lấy danh sách các menu item
  var menuItems = document.querySelectorAll(".menu-item");

  // Biến để theo dõi mục menu đang được chọn
  var activeMenuItemIndex = 0;

  // Hàm cuộn đến div cụ thể
  function scrollToDiv(index) {
    var targetDiv = divs[index - 1];
    if (targetDiv) {
      targetDiv.scrollIntoView({ behavior: "smooth" });

      // Cập nhật màu cho mục menu được chọn
      setActiveMenuItem(index);
    }
  }

  // Hàm cập nhật màu cho mục menu được chọn
  function setActiveMenuItem(index) {
    // Reset màu cho tất cả các menu item
    menuItems.forEach(function (menuItem) {
      menuItem.classList.remove("active");
    });

    // Cập nhật màu cho menu item được chọn
    menuItems[index - 1].classList.add("active");

    // Cập nhật biến activeMenuItemIndex
    activeMenuItemIndex = index;
  }

  // Hàm kiểm tra và cập nhật màu cho menu item
  function updateMenuColor() {
    divs.forEach(function (div, index) {
      if (isElementInViewport(div)) {
        // Nếu đang hiển thị div khác với mục menu đang được chọn, cập nhật màu cho mục menu
        if (index + 1 !== activeMenuItemIndex) {
          setActiveMenuItem(index + 1);
        }
      }
    });
  }

  // Hàm kiểm tra xem một phần tử có trong tầm nhìn không
  function isElementInViewport(el) {
    var rect = el.getBoundingClientRect();

    return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
  }

  // Sự kiện cuộn
  window.addEventListener("scroll", function () {
    updateMenuColor();
  });

  // Kích thước ban đầu
  updateMenuColor();

  //////menu

  if (window.innerWidth < 1025) {
    var prevScrollpos = window.pageYOffset;

    window.onscroll = function () {
      var currentScrollPos = window.pageYOffset;

      // Kiểm tra hướng cuộn (lên trên hay xuống)
      if (prevScrollpos > currentScrollPos) {
        // document.getElementById("bottomMenu").style.bottom = "0";
      } else {
        document.getElementById("bottomMenu").style.bottom = "-70px";
      }

      // Kiểm tra xem người dùng đã cuộn đến đáy trang chưa
      var isBottom = window.innerHeight + window.scrollY >= document.body.offsetHeight;

      // Nếu cuộn đến đáy trang, hiển thị menu
      if (isBottom) {
        bottomMenu.style.bottom = "0";
      }

      prevScrollpos = currentScrollPos;
    };
    var swiperMenu = new Swiper(".slide-menu", {
      navigation: {
        nextEl: ".my-menu .swiper-button-next",
        prevEl: ".my-menu .swiper-button-prev",
      },
      // effect: "fade",
      loop: true,
    });
  }

  //clickMenuItem

  // menuItems = document.querySelectorAll(".nemu-item");
  // menuItems.forEach((element, index) => {
  //   console.log(element);

  //   element.addEventListener("click", () => {
  //     detailNumber = index;
  //     console.log(detailNumber);
  //     document.querySelector(".detail-show").classList.remove("detail-show");
  //     detailElement = document.querySelector(`.detail-${detailNumber}`);
  //     detailElement.classList.add("detail-show");
  //     $("#exampleModal").modal("show");

  //     elementHasRefrestAos = detailElement.querySelectorAll(".aos-animate");
  //     elementHasRefrestAos.forEach((aos) => {
  //       aos.classList.remove("aos-animate");
  //     });

  //     setTimeout(() => {
  //       AOS.init();
  //       AOS.refreshHard();
  //     }, 300);
  //   });

  // });

  menuOnclick = (number) => {
    detailNumber = number;
    console.log(detailNumber);
    document.querySelector(".detail-show").classList.remove("detail-show");
    detailElement = document.querySelector(`.detail-${detailNumber}`);
    detailElement.classList.add("detail-show");

    $("#exampleModal").modal("show");

    elementHasRefrestAos = detailElement.querySelectorAll(".aos-animate");
    elementHasRefrestAos.forEach((aos) => {
      aos.classList.remove("aos-animate");
    });

    // ------------ TAB 3 --- extra

    setTimeout(() => {
      var swiper3Extra = new Swiper(".slide-stack-3-extra", {
        navigation: {
          nextEl: ".slide-stack-3-extra .swiper-button-next",
          prevEl: ".slide-stack-3-extra .swiper-button-prev",
        },
        loop: true,
        // effect: "fade",
      });

      var swiper4Extra = new Swiper(".slide-stack-4-extra", {
        navigation: {
          nextEl: ".slide-stack-4-extra .swiper-button-next",
          prevEl: ".slide-stack-4-extra .swiper-button-prev",
        },
        loop: true,
        // effect: "fade",
      });

      var swiper5Extra = new Swiper(".slide-stack-5-extra", {
        navigation: {
          nextEl: ".slide-stack-5-extra .swiper-button-next",
          prevEl: ".slide-stack-5-extra .swiper-button-prev",
        },
        loop: true,
        // effect: "fade",
      });

      AOS.init();
      AOS.refreshHard();
    }, 800);
  };

  //Xử lí scroll trong modal

  // $("#exampleModal").on("shown.bs.modal", function () {
  //   AOS.refresh();
  // });

  const scrollDemo = document.querySelector("#exampleModal");

  passTop = 0;

  scrollDemo.addEventListener(
    "scroll",
    (event) => {
      let top = scrollDemo.scrollTop;

      let windowHeight = window.innerHeight;
      let documentHeight = scrollDemo.scrollHeight;

      if (top > passTop) {
        document.getElementById("bottomMenu").style.bottom = "-70px";
      } else {
        document.getElementById("bottomMenu").style.bottom = "0";
      }
      passTop = top;

      $(".detail-show [data-aos]").each(function () {
        offset = $(this).offset().top + 150;
        if (top >= offset) {
          $(this).addClass("aos-animate");
        }
      });

      console.log(top);
    },
    { passive: true }
  );

  //ShowVideo

  // document.querySelector(".img-play").addEventListener("click", () => {
  //   $("#modal-video").modal("show");
  // });

  btnPlays = document.querySelectorAll(".img-play");
  btnPlays.forEach((element) => {
    element.addEventListener("click", () => {
      console.log("video");
      $("#modal-video").modal("show");
    });
  });
});

// write function convert string to number

// write function change background when click on button has id = "haha"
